	.subttl	16 bit macro definitions
;
ram	.macro %a,%b
	.ifdef %a
	.messg multiple definitions -> curram
	.else
%a	= curram
	.ifb <%b>
curram = curram+1
	.else
curram = curram+%b
	.endif
	.endif
	.endm

zpage	.macro %a,%b
	.ifdef %a
	.messg multiple definitions -> curram
	.else
%a	= curzpg
	.ifb <%b>
curzpg = curzpg+1
	.else
curzpg = curzpg+%b
	.endif
	.ifgt curzpg-$100
	ERROR- too many zero page variables.....
	.endif
	.endif
	.endm
;
;
;	double precision macros
;
;
ldd	.macro	%a
	lda %a		; x,a <= %a
	ldx %a+1
	.endm
;
std	.macro %a
	sta %a		; %a <= x,a
	stx %a+1
	.endm
;
cpd	.macro %a
	mactmp	= %a
	cpx %a+1	; compare x,a with %a
	.ifn >mactmp
	bne *+5
	.else
	bne *+4
	.endif
	cmp %a
	.endm
;
;
cpi	.macro %a
	cpx #>%a	; compare x,a with #%a
	bne *+4
	cmp #<%a
	.endm
;
ldi	.macro %a
	lda #<%a	; x,a <= #%a
	ldx #>%a
	.endm
;
;
incd	.macro %a
mactmp	= %a
	inc %a		; inc double precision %a
	.ifn >mactmp
	bne *+5
	.else
	bne *+4
	.endif
	inc %a+1
	.endm
;
decd	.macro %a
mactmp	= %a
	pha		; dec double precision %a
	lda %a
	.ifn >mactmp
	bne *+5
	.else
	bne *+4
	.endif
	dec %a+1
	dec %a
	pla
	.endm
;
add	.macro %a
	cld		; add %a to x,a
	clc		; ( carry is only good condition code )
	adc %a
	pha
	txa
	adc %a+1
	tax
	pla	
	.endm
;
sbd	.macro %a
	cld		; sub %a from x,a
	sec		; ( carry is only good condition code )
	sbc %a
	pha
	txa
	sbc %a+1
	tax
	pla
	.endm
;
cmpdr	.macro %a,%b,%r	; double compare %a to %b using .%r
	ld%r %a+1
	cp%r %b+1
mactmp	= %a
	.ifn >mactmp
mactmp	= %b
	.ifn >mactmp
	bne *+2+3+3
	.else
	bne *+2+3+2
	.endif
	.else
mactmp	= %b
	.ifn >mactmp
	bne *+2+2+3
	.else
	bne *+2+2+2
	.endif
	.endif
	ld%r %a
	cp%r %b
	.endm
;
cpa 	.macro %a
	cmp %a
	.endm
;
phd	.macro
	pha
	txa
	pha
	.endm
;
pld	.macro
	pla
	tax
	pla
	.endm
;
adad	.macro %a
	clc
	adc %a
	sta %a
mactmp	= %a
	.ifn >mactmp
	bcc *+5
	.else
	bcc *+4
	.endif
	inc %a+1
	.endm
;
