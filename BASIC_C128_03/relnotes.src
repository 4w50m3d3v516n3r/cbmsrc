	.page
	.subttl  RELEASE NOTES:   BETA-5   03/05/85

; THE FOLLOWING MODIFICATIONS HAVE BEEN MADE TO THE BETA-4 CODE TO CREATE THE
; BETA-5 VERSION RELEASED ON 03/05/85. THE BETA-5 RELEASE IS A PRE-PRODUCTION
; VERSION INTENDED FOR SYSTEM TEST AND EVALUATION AND PRELIMINARY APPLICATION
; SOFTWARE DEVELOPMENT ONLY.
;
;
; The following changes have been made to the MONITOR:
;
;	1/	The MONITOR now accepts binary, octal, decimal and hexidecimal
;		values for any numeric field. This was accomplished by totally
;		re-coding PARSE and portions of ASSEM, and installing a new
;		routine called EVAL. Numbers prefixed by one of the characters
;		$ + & % are interpreted by EVAL as base 16, 10, 8, or 2 values
;		respectively. In the absence of a prefix, the base defaults to
;		hexidecimal always. ASSEM will use the zero-page form wherever
;		possible unless the value is preceeded by extra zeros to force
;		the absolute form (except binary notation).
;
;	2/	The MONITOR now performs limited number conversion.  Additions
;		were made to MAIN1 and CMDCHR and a new routine called CONVERT
;		was installed to handle the conversions. Any of the characters
;		$ + & % entered as a command and prefixing a numeric value are
;		PARSEd (see #1 above) and the hexidecimal value printed.  Full
;		conversion between bases may be added in a later release.
;
;
;
; The following changes have been made to the EDITOR:
;
;	1/	PLOT (SET)  now performs  range checking.  The cursor position
;		sought must lie within the currently defined window. If it does,
;		the position is changed and .C=0 returned, else NO CHANGE made
;		and .C=1 returned.
;
;	2/	PLOT (READ) now returns the current cursor position within the
;		current window  (with respect to the window's origin)  and NOT
;		necessarily the screen origin.
;
;	3/	SCRORG was changed in a previous release to return the current
;		window size in .X and .Y and NOT the screen size.  SCRORG will
;		now return the maximum screen width (39 or 79) as well in .A.
;
;	4/	The entire data file, ED7.SRC, has been relocated to  $FA00 to
;		allow a reserved area in ROM for foreign language systems. The
;		reserved area shall be $FC80 thru $FEFF. This affects the MODE
;		tables, COLor tables, BITS, local variable init table, and all
;		PKY function key tables.
;
;	5/	The default screen colors for the  80-column  screen have been
;		changed to BLACK background and CYAN characters. This was done
;		to make a more presentable screen for systems using monochrome
;		monitors and allow a full pallet of colors without  background
;		interference for systems using RGBI monitors.
;
;
;
; The following changes have been made to the KERNAL:
;
;	1/	IOINIT now initializes the 8563 chip from an updated table now
;		that the tower has been removed. Also changed were the default
;		screen colors (see #5 above) and adjustments for PAL systems.
;
;	2/	IOINIT now has a delay loop of approximately 300ms incorporated
;		into it to allow older versions of the VIC-1541 disk drives to
;		finish their reset sequence. The system previously hung in the
;		auto-boot routine if in 40-column mode with old 1541's.
;
	.page
	.subttl  RELEASE NOTES:   BETA-6   03/20/85

; THE FOLLOWING MODIFICATIONS HAVE BEEN MADE TO THE BETA-5 CODE TO CREATE THE
; BETA-6 VERSION RELEASED ON 03/20/85. THE BETA-6 RELEASE IS A PRE-PRODUCTION
; VERSION INTENDED FOR SYSTEM TEST AND EVALUATION AND PRELIMINARY APPLICATION
; SOFTWARE DEVELOPMENT ONLY. NOTE THE CHANGE TO THE CHARACTER ROM ALSO.
;
;
;
; The following changes have been made to the MONITOR:
;
;	1/	Number conversion from/to all bases (hex,dec,oct,bin) fully
;		functional. Display format different from beta-5 also.
;
;	2/	The monitor DOS parser now provides DIRECTORY display using
;		the syntax:  @[unit#],$[drive:filespec]
;
;
;
; The following changes have been made to the EDITOR:
;
;	1/	The KEYSCAN routine was corrected to properly leave the COLM
;		driver port energizing only PB7. (Previously if no keys were
;		down all lines were left energized.) Also the scan of the
;		CAPS LOCK key was moved to the beginning of the KEYSCAN loop
;		where it will always be scanned and SHFLAG correctly updated.
;		(Previously if no matrix keys were down it was not scanned.)
;
;	2/	The CLRLIN and MOVLIN routines have had all the 'kludge' code
;		removed as it is no longer necessary using 8563R7 parts. Two
;		absolute variables consequently have disappeared, SAV80C & D.
;
;	3/	The various tables used by the screen editor have been shifted
;		around to allow better utilization of free ROM. The MODEx tables
;		now start at $FA80. All other tables now float above editor code.
;
;
;
; The following changes have been made to the KERNAL:
;
;	1/	The interrupt handlers now clear decimal mode (via CLD). This
;		is done AFTER the indirect jumps are made. The correct mode is
;		restored upon return from the interrupt code as usual.
;
;	2/	The SERIAL & TAPE routines now work at either 1 or 2MHz speed.
;		This was accomplished by replacing 'SEI' and 'CLI' opcodes in
;		time sensitive routines with JSR's to new code which saves the
;		current states & forces sprites off & 1MHz speed, and then re-
;		stores them all when through. This required minor changes to the
;		TAPE routines, but the serial ACPTR routine was totally re-coded.
;		Several absolute variables to store the states have been added
;		as well as one called HOLD_OFF which, if B7 is set, will cause
;		these new SEI/CLI routines to be skipped & require the user to
;		assume full responsibility for controlling system speed & sprites
;		during tape or serial I/O operations.
;
;	3/	The space key now correctly skips the current 'found' file during
;		TAPE loads. (The C= key or <no> action will initiate program load.)
;
;	4/	The CLOSE routine now saves the CARRY status in SVXT and not VERCK.
;		This corrects a conflict with the LOAD routine's use of VERCK.
;
;	5/	The BURST routine now correctly reports a 'device not present'. It
;		previously reported 'illegal device number'.
;
;	6/	Improved TKSA (serial routine) turnaround by putting DEBPIA inline.
;
;	7/	The OPEN routine now JSR's to OPENI for serial operations. This
;		corrects a problem that occurred when the device was not present.
;		OPENI pops the return address and JMPs to ERROR5 at such time.
;
;	8/	The INSTALL routine now downloads to RAM the correct code for the
;		DMA Controller. Previously the wrong subroutine was downloaded.
;		Also, a NOP was added to the RAM code after the DMA request.
;
;
;
; The following changes have been made to the CHARACTER ROM:
;
;	1/	Part number 315010-02 has a minor error in the font definition
;		for the lower case reverse field 'v'. This has been corrected in
;		part number 315010-03.
;
;	2/	Part number 315010-03 also includes a modification to the lower
;		case 'm' character (both normal & reverse fields) due to several
;		complaints about its appearance.
;
	.page
	.subttl  RELEASE NOTES:   BETA-7   04/08/85

; THE FOLLOWING MODIFICATIONS HAVE BEEN MADE TO THE BETA-6 CODE TO CREATE THE
; BETA-7 VERSION RELEASED ON 04/08/85. THE BETA-7 RELEASE IS A PRE-PRODUCTION
; VERSION INTENDED FOR SYSTEM TEST AND EVALUATION AND PRELIMINARY APPLICATION
; SOFTWARE DEVELOPMENT ONLY. NOTE THE CHANGE TO THE CHARACTER ROM ALSO.
;
;
;
; The following changes have been made to the MONITOR:
;
;	1/	Previously the HUNT command treated <colon> and <question> in
;		ASCII strings as terminators, hence they could not be  hunted
;		for. This has been corrected.
;
; The following changes have been made to the KERNAL:
;
;	1/	Previously the GO64 routine redirected the soft  RESET vector
;		back to itself thus providing a degree of protection to  C/64
;		software as the system had to be powered down to  escape C/64
;		mode. Unfortunately DRAM devices are not as  volatile as they
;		used to be and many systems required as much as 30 seconds to
;		elapse before they would power up into C/128 mode.  The RESET
;		vector is still present but the GO64 code no longer redirects
;		it. Applications using RESET should note the problem and pro-
;		vide a friendly escape mechanism after protecting themselves.
;
;	2/	Previously it was possible to enter C64 mode running at 2MHz.
;		This has been corrected. Note it is possible from C64 mode to
;		access the 1-2MHz bit (VIC register 48) to speed  up  certain
;		operations if so desired.
;
;	3/	Several minor changes to SERIAL code.  Some inaccessable code
;		was removed from TALK/LISTEN routine.  TKSA now errors out if
;		the SA could not be sent.
;
;	4/	Previously the BOOT routine returned  without  reporting  any
;		errors.  BOOT now returns errors in the same manner as LOADs,
;		with the carry set and error code in the accumulator.
;
;	5/	Previously the BURST load mechanism caused open disk channels
;		to be flushed. This has been corrected and now preserves open
;		user channels as the C/64 LOAD had  (e.g. chaining programs).
;		Note however that  BOOT loads will cause all open  files  for
;		the given device to be closed (see CLOSE_ALL note below).
;
;	6/	BURST must  UNLISTEN the  1571 when a break occurs (STOP key)
;		to signal the drive to  abort the  operation.  Previously the
;		drive stayed in its burst routine waiting to  send  the  next
;		block of data. This fix will prompt the drive to abort too.
;
;	7/	The DMA controller routine (for RAMDISK) has been modified to
;		meet the latest RAMDISK specification.
;
;	8/	A new Kernal JUMP TABLE entry has been created for an all new
;		Kernal subroutine, CLOSE_ALL.   Unlike  CLALL,  which  simply
;		cleared the LAT, FAT, SAT tables and restored the default I/O
;		devices without properly closing files, CLOSE_ALL is passed a
;		device number (fa) and properly closes ALL open files on that
;		device. If that device was the current I/O device,  only then
;		will CLOSE_ALL restore the  appropriate default device.  This
;		new jump vector is located at $FF4A.
;
;	9/	The Kernal IOINIT routine will recognize 8563-R8 & initialize
;		register #25 (horz. smooth scroll) to $47 per 8563 spec mods.
;		Previously this register was  initialized to  $40.  Note that
;		the lower 3 bits of the 8563 status register will return  the
;		revision level of the 8563 part (0=R7, 1=R8, etc.)
;
;
; The following changes have been made to the CHARACTER ROM:
;
;	1/	The hardware now supports an 8K byte character ROM. The lower
;		4K contains the C/64 character set  (P/N 901225-01),  and the
;		upper 4K contains the  C/128  character set  (P/N 315010-03).
;		In domestic systems the switching mechanism  is  the  /64-128
;		MMU signal and is therefore transparent to the user.  It  has
;		been proposed that international units replace one of the  4K
;		character sets with their particular national  character  set
;		and utilize the CAPS_LOCK key to manually switch sets.
	.page
	.subttl  RELEASE NOTES:   BETA-8   04/15/85

; THE FOLLOWING MODIFICATIONS HAVE BEEN MADE TO THE BETA-7 CODE TO CREATE THE
; BETA-8 VERSION RELEASED ON 04/15/85. THE BETA-8 RELEASE IS A PRE-PRODUCTION
; VERSION INTENDED FOR SYSTEM TEST AND EVALUATION AND PRELIMINARY APPLICATION
; SOFTWARE DEVELOPMENT ONLY.
;
;	**************************************************************
;	* PENDING SYSTEM TEST, THIS SHALL BE THE FINAL BETA RELEASE. *
;	* ANY  PROBLEMS  OR  NEEDS  *MUST*  BE  REPORTED  TO  SYSTEM *
;	* ENGINEERING BEFORE  04/19/85  FOR RESOLUTION AND INCLUSION *
;	* INTO THE PRODUCTION ROM RELEASE!			     *
;	**************************************************************
; 
;
;
;
; The following changes have been made to the MONITOR:
;
;	1/	The  Monitor DOS interface  now  uses  the  reserved  logical
;		channel number 0, and no longer transmits a 'close' to the
;		disk. Previously it used channel 1 (which was often in use by
;		the user) and performed a full 'close' (which caused the disk
;		to close ALL open files).
;
;	2/	The  Monitor DOS interface no longer allows  access  to  unit
;		numbers 3 and 31. They are illegal serial bus devices.
;
;	3/	The  Monitor MEMORY DUMP facility correctly displays the full
;		CBM ASCII character set.  Previously the  ASCII was masked to
;		7 bits.
;
; The following changes have been made to the KERNAL:
;
;	1/	The  Kernal BOOT routine no longer transmits a 'close' to the
;		disk. The disk status will now reflect the last I/O operation
;		status similar to a 'load' operation.  A reduntant attempt to
;		transmit the disk warm start (UI) command was removed.
;
;	2/	The Kernal GO64 routine now insures that the 6510 port /HIRAM
;		and /LORAM  lines  are set  HIGH  before entering  C64  mode.
;		Previously entering C64 mode  (where /HIRAM and /LORAM select
;		RAM and ROM memory configurations)  from a C128 graphics mode
;		(where  /HIRAM and /LORAM  select  VIC  and  processor  color
;		nybble banks) would crash the C64 system  because its  system
;		ROM was not in context and entry was not via hardware reset.
;
;
; The following changes have been made to the EDITOR:
;
;	1/	The IRQ screen handler has been modified to accommodate 2 MHz
;		split screen operation. Previously the split screen operation
;		in 2 MHz mode caused the IRQ keyscan to be skipped.
;
;	2/	A difference between the C64 and C128 screen editors has been
;		noted but will NOT BE CHANGED because the same anomaly occurs
;		with the windowing editor on other products.  The  effect  is
;		illustrated by the following BASIC operation:
;
;			10 OPEN 1,0	:REM   OPEN CHANNEL TO KEYBOARD
;			20 INPUT#1,A$	:REM   INPUT A LINE
;			30 PRINT A$	:REM   DISPLAY LINE INPUT
;
;		The PRINT A$  will overwrite the last character of the string
;		entered in response to the 'INPUT'.  The C/64 editor does not
;		overwrite; in fact there are extra spaces found  between  the
;		input and output strings.  Any requests to change this should
;		be sent as soon as possible!
;
	.page
	.subttl  RELEASE NOTES:   BETA-8   04/15/85

; THE FOLLOWING MODIFICATIONS HAVE BEEN MADE TO THE BETA-8 CODE TO CREATE THE
; BETA-9 VERSION RELEASED ON 04/19/85. THE BETA-8 RELEASE IS A PRE-PRODUCTION
; VERSION INTENDED FOR SYSTEM TEST AND EVALUATION AND PRELIMINARY APPLICATION
; SOFTWARE DEVELOPMENT ONLY.
;
;	**************************************************************
;	* PENDING SYSTEM TEST, THIS SHALL BE THE FINAL BETA RELEASE. *
;	**************************************************************
; 
;
; The following changes have been made to the KERNAL:
;
;	1/	The Kernal TAPE handler previously returned the  wrong  error
;		code upon encountering the EOT. This has been fixed to report
;		'file not found'.
;
; The following changes have been made to the EDITOR:
;
;	1/	DOCUMENTATION ONLY:  Please note that  the  Editor  does  not
;		factor in 'VM1' when utilizing 'LDTBL1'.  This means that the
;		IRQ screen handler WILL move the screen per VM1 but that  all
;		printing will continue to update the screen at $400.  Because
;		LDTBL1 is in ROM it cannot be modified as in the  C/64.   Any
;		requests to change this mechanism must be made NOW.
;
;	2/	The Editor now includes the National keyboard  lookup  tables
;		and a National-to-ASCII conversion table.  While there is  no
;		National keyboard driver code in ROM, it is expected that the
;		inclusion of these tables will provide sufficient support for
;		RAM or Function Cartridge based drivers.  AN APPLICATION NOTE
;		WILL BE FORTHCOMING TO DETAIL THE IMPLEMENTATION OF A DRIVER.
;		
; The following changes reference ALL sections of code:
;		
;	1/	The three (3) C/128 ROMs now contain a revision  byte  and  a
;		byte reserved for 'rounding' the checksum. The locations  are
;		given below. Please note that the 'revision'  byte  described
;		here refers to  the  individual  ROM  contents,  NOT  to  the
;		software (e.g.: the KERNAL software revision byte is $FF80).
;
;			LOW (U33):	$7FFE - REVISION BYTE
;					$7FFF - CHECKSUM ADJUST
;
;			MID (U34):	$BFFE - REVISION BYTE
;					$BFFF - CHECKSUM ADJUST
;
;			HIGH (U35):	$CFFE - REVISION BYTE
;					$CFFF - CHECKSUM ADJUST
;
;		The 8-bit checksum is calculated over the ROM's  contents  by
;		adding the sequential bytes for each 16KB ROM, discarding any
;		carry between additions. Thus the sum of each ROM  should  be
;		equal to the MSB of its starting address (e.g.: LO=$40,  MID=
;		$80, HI=$C0).  Please note the checksum of the HI  (U35)  ROM
;		does NOT include the CP/M portion (address range $D000-$DFFF)
;		as this section of ROM cannot be read by the host processor. 
	.page
	.subttl  RELEASE NOTES:   318020-03   05/08/85

; THE FOLLOWING MODIFICATIONS HAVE BEEN MADE TO THE  318020-02 CODE TO CREATE
; THE 318020-03 VERSION RELEASED ON 05/08/85.  THIS RELEASE IS MADE TO CREATE
; MASKED ROMS FOR PRODUCTION.
;
; 
;
; The following changes have been made to the KERNAL:
;
;	1/	Previously the IOINIT routine improperly initialized PAL  and
;		'R8' versions of the 8563 80-column display device. This  has
;		been corrected. Testing of these modes has been very limited.
;
;	2/	Previously the fast SERIAL routine SPINP forced the  50/60 Hz
;		flag on D1CRA low (60Hz). This has been corrected to preserve
;		the status of this line.
;
;	3/	A new jump table entry has been created for the  fast  SERIAL
;		routines SPINP and SPOUT at $FF47.  Users must enter with the
;		carry flag clear to select SPINP and carry flag set for SPOUT
;
;	4/	Previously the SERIAL routine DISK_CLI enabled  IRQ's  before
;		restoring the sprite enable register. This caused  the  BASIC
;		IRQ sprite handler, under stress, to lose sprites.  This  has
;		been corrected. The fix required a change as well to the TAPE
;		routine TNIF which shared portions of the  DISK_CLI  routine.
;		The shared code has been eliminated by copying the  necessary
;		portions to TNIF.
;
;	5/	Previously the Kernal RAM code for  JMPFAR called the  GETCFG
;		ROM code directly.  To preserve code  modularity,  the direct
;		address was replaced by the Kernal jump table address.
;
; The following changes have been made to the EDITOR:
;
;	1/	Due to remaining problems with the 8563 block fill  function,
;		the so-called KLUDGE code has again been added to the  CLRLIN
;		routine.  This patch will clear up the occasional  characters
;		seen on the 80-column text screen after a SCNCLR, and will be
;		valid even after the 8563 bug is fixed.  Two (2) absolute RAM
;		variables were added to DECLARE without disturbing anything.
;
;	2/	Previously it was not possible to move the VIC 40-column text
;		screen and still utilize the screen editor  because  LDTB1 is
;		is ROM based (unlke the C64 which is RAM based).  To  provide
;		this capability a new variable, LDTB1_SA has been created and
;		may be used in conjunction with the variable VM1 to  move the
;		VIC text screen. VM1 should be written instead of VIC reg #24
;		(default value $14) and LDTB1_SA loaded with the high byte of
;		the new screen location (default value $04). Please note that
;		the placement of VIC video matrices is limited by  the  image
;		of the character ROM VIC sees at $1000-$1FFF and the presence
;		of ROM beginning at $4000 in the system's  memory  map.  This
;		change affected Editor routines SCRSET and MOVLIN which  used
;		LDTB1 directly, and CINT which now initializes LDTB1_SA.
;
;	3/	There was a problem with windows one (1) character wide in 80
;		column mode which affected areas outside the  window. It  was
;		been corrected by testing for this special case in CLRL80.
;
;	4/	The NATIONAL keyboard lookup tables and the National-to-ASCII
;		conversion table have been removed.  They were  found  to  be
;		unnecessary for Foreign-language systems and insufficent  for
;		other applications. AN APPLICATION NOTE IS FORTHCOMING.
;
;	5/	The handling of 8563s special attributes (ALT, RVS, UNDERLINE
;		and FLASH) has been  made  more  consistant  throughout.  The
;		BLANK and CLRLN routines now strip all attributes except ALT.
;		(this will affect, for example, INSERT and DELETE).   Various
;		other routines now preserve the RVS bit  (not to be  confused
;		with reverse-field mode; this hardware bit is  unused  by the
;		system but can be set by the user).
;
;	6/	A single <ESCAPE> no longer cancels all  editor  modes  (e.g.
;		quote, insert, underline, flash & reverse). A double <ESCAPE>
;		or <ESCAPE>-O is now required. 
;
	.page
	.subttl   RELEASE NOTES:   318018-03, 318019-03, 318020-04   10/11/85

; THE FOLLOWING MODIFICATIONS HAVE BEEN MADE TO THE 318018-02, 318019-02, AND
; 318020-03 CODE TO CREATE A NEW ROM SET RELEASED ON 10/11/85.  THIS  RELEASE
; IS MADE TO CREATE MASKED ROMS FOR PRODUCTION.
;
; 
;        The following information represents a filtered condensation  of
;        all  known problems, complaints, and suggestions that pertain to
;        the C/128 system software to  date  (exclusive  of  CP/M).   The
;        current system software consists of:
;
;        1.  Part No. 318018-02 --> BASIC LOW            ($4000-$7FFF)
;
;        2.  Part No. 318019-02 --> BASIC HIGH, MONITOR  ($8000-$BFFF)
;
;        3.  Part No. 318020-03 --> EDITOR, KERNEL, CP/M ($C000-$FFFF)
;
;        Each 16KB ROM contains  a  small  patch  area  for  changes,  if
;        necessary,   and   all   patches   described   below  have  been
;        accomplished such that any single change will never affect  more
;        that  one  ROM.   Similarly, each ROM contains a revision status
;        byte  (at  $7FFE,   $BFFE,   and   $FF80   respectively)   which
;        applications may test to determine the release level.  Currently
;        they are all zero.  Problems have been found with  the  code  in
;        all   three  ROMs  above.   While  not  all  problems  in-and-of
;        themselves merit changing a particular ROM,  collectively  there
;        is  sufficient  cause  to  make  updates to all three ROMs.  The
;        following summary itemizes the changes by ROM:
;
;
;        Part No.  318018-02 --> BASIC LOW ($4000-$7FFF)
;
;        1.  LIST and DELETE commands.  Previously they did not report as
;            errors  certain  non-numeric characters passed as arguments,
;            such as 'LIST A'.  This has been corrected  totally  in-line
;            by  adjusting  an  erroneous  relative branch in the 'RANGE'
;            subroutine.
;
;        2.  CIRCLE  command.    Previously   an   unspecified   Y-radius
;            defaulted  to  the X-radius (as it should), but the X-radius
;            value had already been scaled for the  X-axis  and  not  the
;            Y-axis.   This has been corrected totally in-line by scaling
;            the radii after the defaults have been established.
;
;        3.  RS-232 STatus.  Previously accessing  ST  after  RS-232  I/O
;            resulted  in  an incorrect status being returned from, and a
;            zero written to, location $10A14,  possibly  corrupting  the
;            BASIC variable area.  This was a result of BASIC calling the
;            Kernel routine 'READSS'  with  the  incorrect  RAM  bank  in
;            context.    This  has  been  corrected  totally  in-line  by
;            substituting the correct BASIC subroutine call.
;
;        4.  CHAR command.  Previously using CHAR with the 80-column text
;            screen  (GRAPHIC  mode  5)  resulted  in  RAM  corruption at
;            locations $D600 and $D601 of RAM  bank  0  (the  BASIC  text
;            bank)  due  to BASIC calling the Editor PLOT routine without
;            the I/O block in context.  This has been corrected utilizing
;            two patch subroutines.
;
;        5.  RENUMBER command.   Previously  the  pass  2  routine, which
;            was to pre-scan BASIC text and report 'out of memory' errors
;            prior  to  actually changing anything, was seriously flawed.
;            This has been corrected utilizing a patch subroutine.
;
;        6.  DELETE command.   Previously did not limit-check itself when
;            moving down BASIC text,  therefore it was possible to  crash
;            when DELETEing lines at or near the top of memory  (near the
;            MMU  configuration  registers).   This  has  been  corrected
;            utilizing a patch subroutine.
;
;
;            Part No.  318019-02 --> BASIC HIGH & MONITOR ($8000-$BFFF)
;
;        7.  RSPRITE and RSPPOS functions.  Previously they  accepted  as
;            parameters  sprite  numbers  in  the  range  1-16,  which is
;            incorrect.  This  has  been  corrected  totally  in-line  by
;            limiting  the  range  check to 1-8, and reporting an illegal
;            quantity error for sprite numbers outside this range.
;
;        8.  PRINT  USING  command.   Previously  there  was  an  anomaly
;            involving  the  use  of  floating  money  symbols  ('$') and
;            commas.  The command  'PRINT USING "#,##$.##"; 123.45',  for
;            example,   resulted  in  the  output  '$,123.45',  which  is
;            incorrect.  This has been fixed utilizing a patch subroutine
;            which  checks  specifically  for  the  '$,'  occurrence  and
;            substitutes a '_$' ('_' = fill character) whenever found.
;
;        9.  Relative  Coordinates  for  all  graphic  commands   (except
;            MOVSPR)   were   incorrectly  processed.   The  problem  was
;            apparent when negative relative coordinates were used, which
;            resulted  in  an  illegal  quantity  error.   This  has been
;            corrected  totally  in-line  by  substituting  a   different
;            subroutine  call  to pre-existing code.  This change affects
;            the BASIC commands LOCATE, DRAW, PAINT, BOX, CIRCLE, GSHAPE,
;            and  SSHAPE.   This  change  also  allows  negative absolute
;            coordinates to be accepted (previously they resulted  in  an
;            illegal  quantity error), although the legal range remains a
;            16-bit  value:   0-65535  (unsigned)  or  -32768  to   32767
;            (signed:  i.e., -1 is equivalent to 65535).
;
;
;            Part No.  318020-03 --> EDITOR & KERNEL ($C000-$FFFF)
;
;       10.  CAPS LOCK Q.  Previously an error in  a  key  matrix  decode
;            table caused a lower-case 'Q' to be passed when the keyboard
;            is in CAPS LOCK mode.   The  table  has  been  corrected  by
;            substituting the correct value for upper-case 'Q'.
;
;       11.  IOINIT  system  initialization.    Previously   the   RS-232
;            pseudo-6551  registers  were  not  initialized because these
;            values are expected to be given by the user whenever  RS-232
;            channels  are  OPENed.  Apparently many C64 users have taken
;            advantage of the fact the  C64  'happened'  to  clear  these
;            locations  and  fail  to specify critical parameters.  These
;            RS-232 registers are now  initialized  to  default  to:   no
;            parity, full duplex, 3-line, 1-stop bit, 8-bit words and 300
;            baud, via a patch subroutine.
;
;       12.  BASIN system  call.   Previously  attempting  input  from  a
;            logical channel to the screen (e.g., via INPUT#) resulted in
;            line too long errors.  This has been corrected  utilizing  a
;            subroutine  patch to preserve bit-7 of CRSW, which serves as
;            a flag to the Editor that a (pseudo)  end-of-line  has  been
;            reached.  Also note: switching between 40 and 80-column text
;            screens will confuse I/O with  logical screen channels.  The
;            Editor variable LINTMP ($A30) is not a local variable. Users
;            can POKE LINTMP with the screen line number  after  changing
;            display screens and before INPUT#'s as a work-around.
;
;       13.  OPEN RS-232 system call.   Previously  it  was  possible  to
;            receive  a  carry-set  status,  normally indicating a error,
;            when no error existed after OPENing an RS-232 channel.  This
;            has  been corrected totally in-line by a modification to the
;            code which checks for the proper X-line hardware states.
;
;       14.  LOAD system call.  Previously the normal (a.k.a.  SLOW) load
;            mechanism  did  not  preserve  the  starting  address of any
;            LOADs, which made  the  BASIC  'BOOT  "file"'  command  form
;            malfunction  unpredictably.  This is apparent when used with
;            1541  drives.   This  has  been  corrected   via   a   patch
;            subroutine,  which  saves the starting address of all LOADed
;            files at SAL and  SAH,  the  same  place  the  fast  (a.k.a.
;            BURST) load mechanism does.
;
;       15.  DMA system call.  Previously the kernel forced the I/O block
;            into  the user's memory configuration at all times, which is
;            no longer necessary  and,  in  fact,  seriously  limits  the
;            functionality  of the (final) RAM expansion cartridge.  This
;            has been corrected totally in-line, and affects  all  Kernel
;            DMA system calls as well as the BASIC FETCH, STASH, and SWAP
;            commands.
;
;
;        There are also quite  a  few  items  that,  for  one  reason  or
;        another,  I have categorized as either un-fixable (the fix would
;        be too radical given the work-around or relative severity of the
;        problem),  or  maybe-fixable  (given more time or the collective
;        approval of others).  They are included here because, one way or
;        the   other,   they   should  be  documented  along  with  their
;        implications, work-arounds, et cetera.
;
;        1.  DMA interface.  It was  recently  discovered  that  the  DMA
;            hardware  necessarily utilized the VIC bank pointer, not the
;            processor bank pointer, for address  generation  during  DMA
;            transfers.   The  VIC  bank is determined by the contents of
;            the MMU RAM configuration register (VA16  (bit-6)  and  VA17
;            (bit-7),  $D506),  which is set at system initialization and
;            never changed by the system.  Consequently the FETCH, STASH,
;            and SWAP functions are bound to RAM-0.  It  should  be noted
;            that the (processor) BANK command  is still required to turn
;            the  I/O  block on or off prior to using those commands.  It
;            should  also  be  noted that  DMA  hardware is unreliable at
;            2MHz  clock  speeds  and  consequently the user insure  1MHz
;            (SLOW) mode is used before any DMA operations are performed.
;
;        2.  IRQ handler.  It is possible for the Kernel IRQ  handler  to
;            perform  a keyscan when the IRQ was not the Kernel's.  While
;            the fix has been coded, I am reluctant to include it because
;            of  its potential to cause problems to existing applications
;            which may be taking advantage of the unintentional keyscan.
;
;        3.  IRQ and NMI handlers.  The Kernel  forces  the  system  bank
;            into  context  before taking the RAM indirect vectors to the
;            actual interrupt handler.  Much flexibility can be added  to
;            the  mechanism if the memory bank to be brought into context
;            at interrupt time could be read from a variable instead of a
;            ROM constant.  I am reluctant to include this change because
;            the RAM variable would have to be located  in  a  previously
;            'free' location, which may be used by existing applications.
;
;        4.  SAVE-to-disk.  It is not possible to SAVE the last  byte  of
;            any  memory  bank  (e.g.,  RAM  at  $FFFF), because the SAVE
;            routine requires you to specify the end of the  area  to  be
;            SAVEd  as  the  ending  address PLUS ONE ($FFFF+1 -> $0000).
;            This is a problem found on all CBM 65xx systems.
;
;        5.  SAVE-to-cassette.  It is not possible to save the last  page
;            of  any memory bank (e.g., RAM at $FF00-$FFFF) to tape.  The
;            tape handler hangs with the motor  running  until  the  user
;            STOPs  it.   This is a problem found on all CBM 65xx systems
;            except the Plus-4.
;
;        6.  SAVE and LOAD.   While  program  SAVEs  correctly  save  the
;            16-bit  starting  address  for  future  LOADs,  the existing
;            formats do  not  save  the  memory  bank.   This  cannot  be
;            accommodated  without  the  creation of special C128 program
;            headers  for  disk  and  tape,  which  is  undesirable   and
;            non-trivial.
;
;        7.  STOP/RESET monitor entry.  It is not possible to  enter  the
;            Monitor  directly via the STOP/RESET sequence from BASIC and
;            then eXit back to BASIC without  incurring  a  'cold'  BASIC
;            initialization.   The  alternative,  taking the BASIC 'warm'
;            start route, would result in a system crash if BASIC had not
;            been properly initialized and is therefore not a recommended
;            fix.  The work-around, assuming  BASIC  was  running  before
;            STOP/RESET,  is  for  the  user  to place the value $C1 into
;            location $A04 (INIT_STATUS) and then eXit.
;
;        8.  Monitor 'H' (hunt) command.   Because  the  editor  performs
;            various translations on data read from the screen, it is not
;            possible to Hunt for certain CBM characters, such as pi  and
;            all reverse-field characters.
;
;        9.  BOX command.   BOX,  because  of  the  particular  algorithm
;            utilized,  has  a  restricted  range  of  -16384  to  +16383
;            (unscaled).  The algorithm uses parameters  that  are  twice
;            those  given  for  calculations  and divides down the result
;            before  plotting.   Thus  it  is  possible  for  very  large
;            (unscaled)  positive coordinates to result in large negative
;            plots.   The  work-around   is   to   use   SCALEing,   user
;            range-checking,  or  avoid BOX and use either DRAW or CIRCLE
;            commands instead.
;
;       10.  RDOT, PEN, and  RSPPOS  functions.   These  BASIC  functions
;            return   the  current  pixel  cursor,  lightpen  and  sprite
;            positions, respectively, but  the  values  they  return  are
;            unSCALEd.   Correcting  this is trivial, but would result in
;            problems  for  existing  applications  as  well   as   being
;            incompatible with C64 VSP and the PLUS-4.
;
;       11.  FNDEF and GRAPHIC modes.  After defining  a  user  function,
;            anything that results in program relocation must be avoided,
;            such as GRAPHIC  'n'  or  GRAPHIC  CLR.   There  is  no  fix
;            planned.  The work-around is a general rule:  define GRAPHIC
;            screens first (then SCALE), then define functions.
;
;       12.  HELP command.  HELP does not completely identify two type of
;            syntax errors:  'RUN n' where 'n' is an undefined statement,
;            and 'XXXX n' where 'XXXX' is any BASIC command which expects
;            no  argument.   In  the  RUN  case,  TXTPTR had already been
;            reset, but not OLDLIN, thus the correct  line  is  displayed
;            but  without  any  highlighting.  In the other case, because
;            XEQCM exits via CHRGET, TXTPTR  is  incremented  before  the
;            error  is  caught,  resulting in part of the error not being
;            highlighted.  The  fix  would  be  too  complex,  especially
;            considering  the  fact that the line containing the error is
;            reported, albeit without highlighting.
;
;       13.  GETKEY  function.   In  the  form  'GETKEY  A',  this  BASIC
;            function  should  wait  until  a numeric key is pressed, but
;            certain non-numeric keys are accepted, such as  'E',  colon,
;            comma,  period,  '+', and '-'.  The same anomaly occurs with
;            'GET A' for the same reason, as is a known CBM 65xx quirk.
;
;       14.  PUDEF and PRINT USING commands.  There is poor documentation
;            of the fact that USING format fields such as "$,###.##", the
;            leading '$' or commas are not interpreted per the PUDEFs  as
;            they  are considered not part of the numeric field.  This is
;            found to occur on all CBM 65xx systems  with  BASIC  3.5  or
;            higher.
;
;       15.  RENUMBER command.  Because of the routine's use of LINNUM to
;            fetch from BASIC text the statement number of an object,  it
;            is possible to get a 'syntax error' when none existed within
;            the RENUMBER command line itself.  LINNUM itself reports any
;            line numbers it reads that are out of range (>63999).  Also,
;            RENUMBER does not renumber line ranges.  Therefore, LIST and
;            DELETE statements within a program are NOT changed.
;
;       16.  OUT of MEMORY ERROR.  It is possible to hang the system with
;            this error from a running program when there is  insuffcient
;            memory to contain the string representation of the  original
;            line number where the error occurred.  One must STOP/RESTORE
;            the system and type CLR to recover.  This problem  is  found
;            on most CBM 65xx systems.
;
;        Finally, there are suggestions, requests, and enhancements  that
;        have  been proposed which deserve consideration even though they
;        pose a degree of risk and therefore are  dubious  inclusions  in
;        any ROM update.
;
;        1.  CHAR command.  Several people have requested  that  CHAR  be
;            able to plot user defined characters.  The fact that you can
;            is one of the many undocumented features of the C128.  In  a
;            graphic  bit  map  mode, CHAR fetches character data per two
;            RAM  pointers,  UPPER_GRAPHIC  ($11EB)   and   LOWER_GRAPHIC
;            ($11EC).   Note  that  the  character  definitions  must  be
;            located in RAM-0 between $0000-$3FFF.
;
;        2.  80-column screen initialization before  entering  C64  mode.
;            This is not possible without modification to C64 ROMs, which
;            is out of the question.  The 80-column screen is set-up when
;            C64 mode is entered from C128 mode, but is not when C64 mode
;            is entered directly from  power-up  (e.g.,  C=/RESET).   The
;            80-column monitor should be turned off in such cases.
;
;        3.  BACKUP command.  This command is  non-functional  without  a
;            dual  disk  drive.   If  there  is  never going to be such a
;            product, now is the time to patch it such that it  functions
;            as  a  unit-to-unit  BACKUP  as well.  The DOS SHELL utility
;            does perform this function, albeit inconveniently.
;
;        4.  New BASIC commands.  Several people have requested something
;            analogous  to FETCH, STASH, and SWAP (DMA BASIC commands) or
;            the  Monitor  'T'  (transfer)  command  to  move  blocks  of
;            internal RAM about.  Other common requests are FIND, CHANGE,
;            MERGE, LLIST and LDIR commands.  While  it  is  clearly  too
;            late  to  incorporate new commands into BASIC, it has always
;            been possible to extend the BASIC command  set  via  wedges.
;
;        5.  New Monitor commands.  There was no room in ROM  to  include
;            ML  tracing,  breakpoints,  code  relocators,  etc.   It  is
;            possible, as with BASIC, to extend the Monitor  command  set
;            via wedges. Also considered were Hunt wildcards, etc.
;
;        6.  ESCAPE-O.  The screen Editor interprets this key sequence as
;            a command to call TOQM, its routine to cancel insert, quote,
;            reverse, underline, and flash  modes.   The  confusion  here
;            involves  insert  mode, and the error is one of terminology.
;            Insert mode refers to the state of the Editor after  one  or
;            more depressions of the INSERT key.  Auto insert mode refers
;            to the state of the Editor after it receives an ESCAPE-A key
;            sequence.   They  are  two  different modes.  Insert mode is
;            canceled by ESCAPE-O.   Auto  insert  mode  is  canceled  by
;            ESCAPE-C.
;
;        7.  CONTROL-O  (flash  mode)  and  CONTROL-B  (underline  mode).
;            Users  complain  that  these  cannot be turned off by typing
;            their complements, CONTROL-SHIFT-O and CONTROL-SHIFT-B.  The
;            Editor  does  not recognize any CONTROL-SHIFT keystrokes (in
;            fact, any 3-key depressions are  invalid  and  may  generate
;            'shadow' (false) keystrokes.  This is common to all CBM 65xx
;            systems,  the  CONTROL-N  (lower-case  mode)  sequence   for
;            example).  In PRINT strings, the corresponding CHR$() string
;            can be used.  From the keyboard, users can use  ESCAPE-O  to
;            cancel  the flash or underline modes (and C=/SHIFT to toggle
;            case modes).
;
;
;        The updated C/128 ROM set will bear the following part numbers:
;
;        1.  # 318018-03 --> BASIC LOW            ($4000-$7FFF, U33) cksum= E540
;
;        2.  # 318019-03 --> BASIC HIGH, MONITOR  ($8000-$BFFF, U34) cksum= 9780
;
;        3.  # 318020-04 --> EDITOR, KERNEL, CP/M ($C000-$FFFF, U35) cksum= 3EC4
;
;
;	 Fred Bowen	09/16/85  10/10/85
