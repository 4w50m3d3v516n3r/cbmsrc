;THIS CODE HAS BEEN REASSEMBLED BY MICHAEL STEIL.
;IT IS NOT BASED ON ORIGINAL COMMODORE CODE.
;SICE SOME CODE IS RELATED TO C64 KERNAL CODE,
;MATCHING SEQUENCES COULD BE REPLACED WITH CODE,
;SYMBOLS AND COMMENTS FROM THE KERNAL. THIS HAS
;BEEN DONE IN A FEW PLACES. CONTRIBUTIONS ARE
;WELCOME.

L00B0=$B0
L00B1=$B1
L00B2=$B2
L00B3=$B3
L00B4=$B4
NDX=$B6
L00B8=$B8
L00BA=$BA
L00BC=$BC
L00BD=$BD
L00BE=$BE
L00BF=$BF
L00C0=$C0
L00C1=$C1
L00C2=$C2
L00C4=$C4
L00C6=$C6
L00C7=$C7
L00C8=$C8
KEYD=$C9
L00D3=$D3
L00D4=$D4
L00D5=$D5
L00D6=$D6
L00D7=$D7
L00D8=$D8
L00D9=$D9
L00DA=$DA
L00DB=$DB
L00DC=$DC
L00DD=$DD
L00F6=$F6


XMAX=10

.PAG 'DECLARE'
; I/O DEVICES
;
	* =$D000
VICREG	=* ;VIC REGISTERS
.SKI 2
	* =$D400
SIDREG	=* ;SID REGISTERS
.SKI 2
	* =$D800
VICCOL	*=*+1024        ;VIC COLOR NYBBLES
.SKI 2
	* =$DC00        ;DEVICE1 6526 (PAGE1 IRQ)
COLM	;KEYBOARD MATRIX
D1PRA	*=*+1
ROWS	;KEYBOARD MATRIX
D1PRB	*=*+1
D1DDRA	*=*+1
D1DDRB	*=*+1
D1T1L	*=*+1
D1T1H	*=*+1
D1T2L	*=*+1
D1T2H	*=*+1
D1TOD1	*=*+1
D1TODS	*=*+1
D1TODM	*=*+1
D1TODH	*=*+1
D1SDR	*=*+1
D1ICR	*=*+1
D1CRA	*=*+1
D1CRB	*=*+1

.SKI 3
	* =$400
VICSCN	*=*+1024
;
;SCREEN EDITOR CONSTANTS
;
LLEN	=40             ;SINGLE LINE 40 COLUMNS

.PAG 'OS'
	*=$FAE0
LFAE0
	.BYTE $18,$27,$47,$0C,$14,$14,$04
TVIC
	.BYTE $1B,0,0,0,0,8,0,$1E,$8F,1,0,0,0,0,0,3,1 ;DATA (17-33)

	*=$FB00

INCHR	JMP NINCHR
CGETL	JMP NCGETL
OUTCH	JMP NOUTCH
KSTOP	JMP NSTOP

START
	SEI
	LDX #$FF
	TXS
	CLD
	STX D1DDRA
	LDA #0
	STA D1DDRB
	DEX
RAMTZ0	STA $01,X       ;ZERO PAGE
	DEX
	BNE RAMTZ0
	LDX #7
LFB21	LDA LFAE0-1,X
	STA L00D5-1,X
	DEX
	BNE LFB21
	LDX #$10        ;LOAD VIC REGS
PX4	LDA TVIC,X
	STA VICREG+17,X
	DEX
	BPL PX4
	JSR LFB3D
	CLI
	JMP $E000

HMECLR	BCC HOME
LFB3D	LDX L00D3
LFB3F	JSR LFB58
	JSR LFC35
	CPX L00D5
	INX
	BCC LFB3F
HOME	LDX L00D3
	STX L00B4
	STX L00B2
	LDX L00D4
	STX PNTR
	STX L00B1
LFB56	LDX L00B4
LFB58	LDA LDTB2,X
	STA L00B8
	STA L00BA
	LDA LDTB1,X
	STA L00B8+1
	AND #$03
	ORA #>VICCOL    ;VIC COLOR RAM
	STA L00BA+1
	RTS

NCGETL	LDA NDX
	BEQ LFB80
	SEI
LFB70	LDA KEYD
	LDX #0
LFB74	LDY KEYD+1,X
	STY KEYD,X
	INX
	CPX #XMAX-1
	BNE LFB74
	DEC NDX
	CLI
LFB80	RTS

LFB81	INC L00BF
	JSR NOUTCH
	DEC L00BF
LFB88	LDA NDX
	STA L00B3
	BEQ LFB88
	SEI
	LDX #$47
	CPX L00D7
	BEQ LFB9E
	LDA L00D7
	STX L00D7
	LDX L00B0
	JSR LFC28
LFB9E	JSR LFB70
	CMP #$0D
	BNE LFB81
	STA L00BC
	JSR LFDA9
	STX L00F6
LFBAC	LDA L00DC,X
	BEQ LFBB3
	DEX
	BNE LFBAC
LFBB3	STX L00B4
	LDY L00D4
	LDA L00B2
	BMI LFBCF
	CMP L00B4
	BCC LFBCF
	LDY L00B1
	CMP L00F6
	BCC LFBCD
	BNE LFBE6
	CPY L00BD
	BEQ LFBCD
	BCS LFBE6
LFBCD	STA L00B4
LFBCF	STY PNTR
	JMP LFBF0

NINCHR	LDA PNTR
	STA L00B1
	LDA L00B4
	STA L00B2
	TYA
	PHA
	TXA
	PHA
	LDA L00BC
	BEQ LFB88
	BPL LFBF0
LFBE6	LDA #0
	STA L00BC
	STA L00C0
	LDA #$0D
	BNE LFC17
;
LFBF0	JSR LFB56
	JSR LFC50
	CMP #$20
	ORA #$40
	BCC LFC06
	AND #$3F
	CMP #$20
	BCS LFC06
	TAX
	LDA LFCC3,X
LFC06	LDX L00B4
	CPX L00F6
	BCC LFC14
	CPY L00BD
	BCC LFC14
	ROR L00BC
	BCS LFC17
LFC14	JSR LFDCF
LFC17	STA L00BE
	PLA
	TAX
	PLA
	TAY
	LDA L00BE
	RTS

LFC20	LDA #$20
LFC22	LDX L00D8
	BPL LFC28
LFC26	LDX L00C1
LFC28	LDY #2
	STY L00D9
LFC2C	LDY PNTR
	STA (L00B8)Y
	TXA
	STA (L00BA)Y
	TAX
	RTS

LFC35	TXA
	PHA
	LDA PNTR
	PHA
	LDA #0
	STA L00DC,X
	LDY L00D4
LFC40	STY PNTR
	JSR LFC20
	CPY L00D6
	INY
	BCC LFC40
	PLA
	STA PNTR
	PLA
	TAX
	RTS

LFC50	LDY PNTR
	LDA (L00B8)Y
	PHA
	LDA (L00BA)Y
	STA L00C1
	PLA
	RTS

NOUTCH	PHA
	STA L00BE
	TXA
	PHA
	TYA
	PHA
	LDA #0
	STA L00BC
	JSR LFC6F
	PLA
	TAY
	PLA
	TAX
	PLA
	RTS

LFC6F	LDA L00BE
	AND #$7F
	CMP #$20
	BCC LFC9D
	AND #$3F
	CMP #$22
	BNE LFC85
	LDA L00C0
	EOR #$80
	STA L00C0
	LDA #$22
LFC85	JSR LFC22
	JSR LFDCF
	BCC LFC9C
	LDY L00BF
	BEQ LFC98
	LDA L00DC,X
	BNE LFC9C
	JSR LFD86
LFC98	LDA #$80
	STA L00DC,X
LFC9C	RTS

LFC9D	LDX #LFCC3E-LFCC3
	LDA L00BE
LFCA1	DEX
	BMI LFC98
	CMP LFCC3,X
	BNE LFCA1
	CPX #7
	BCS LFCB6
	BIT L00C0
	BPL LFCB6
	TXA
	ORA #$40
	BNE LFC85
LFCB6	ASL A
	BCC LFCBA
	DEX
LFCBA	LDA LFCCF+1,X
	PHA
	LDA LFCCF,X
	PHA
	RTS

LFCC3
	.BYTE $11       ;DOWN
	.BYTE $91       ;UP
	.BYTE $13       ;HOME
	.BYTE $93       ;CLR
	.BYTE $1D :RIGHT
	.BYTE $9D       ;LEFT
	.BYTE $03       ;STOP
	.BYTE $83       ;RUN
	.BYTE $0D       ;CR
	.BYTE $8D       ;SH CR
	.BYTE $14       ;DEL
	.BYTE $94       ;INST
LFCC3E

LFCCF
	.WORD UPDOWN-1
	.WORD HMECLR-1
	.WORD LFTRGT-1
	.WORD STPRUN-1
	.WORD CRSHCR-1
	.WORD DELINS-1

UPDOWN	BCS UP
	JSR LFD09
LFCE0	LDA L00DC,X
	BNE LFCE8
	SEC
	ROR L00B2
	CLC
LFCE8	RTS

UP	LDX L00B4
	CPX L00D3
	BEQ LFCE8
	JSR LFCE0
	DEC L00B4
	JMP LFB56

LFTRGT	BCS LEFT
	JSR LFDCF
	BCS LFCE0
	RTS

LEFT	JSR LFDE2
	BCS LFCE8
	BNE LFCE8
	INX
	BNE LFCE0
LFD09	LDX L00B4
	CPX L00D5
	BCC LFD37
	LDX L00D3
	DEC L00B4
	CPX L00C7
	BCS LFD19
	DEC L00C7
LFD19	BIT L00B2
	BMI LFD1F
	DEC L00B2
LFD1F	JSR LFB58
	CPX L00D5
	BCS LFD30
	INX
	LDA L00DC,X
	STA L00DB,X
	JSR SCRLIN
	BCS LFD1F
LFD30	JSR LFC35
	LDX L00D3
	ASL L00DC,X
LFD37	INC L00B4
	JMP LFB56

CRSHCR	JSR LFDA9
	JSR LFD09
	LDA #0
	STA L00C0
	STA L00DC,X
	LDY L00D4
	STY PNTR
	RTS

STPRUN	BCC LFD5D
	LDX #RUNTBE-RUNTB-1
	SEI
	STX NDX
LP23	LDA RUNTB-1,X
	STA KEYD-1,X
	DEX
	BNE LP23
	CLI
LFD5D	RTS

RUNTB	.BYTE $D,'RUN',$D
RUNTBE

SCRLIN	LDA LDTB2,X
	STA L00C2
	STA L00C4
	LDA LDTB1,X
	STA L00C2+1
	AND #$03
	ORA #>VICCOL
	STA L00C4+1
	LDY L00D4
	DEY
SCD20	INY
	LDA (L00C2)Y
	STA (L00B8)Y
	LDA (L00C4)Y
	STA (L00BA)Y
	CPY L00D6
	BCC SCD20
	RTS

LFD86	LDX L00B2
	BMI LFD90
	CPX L00B4
	BCC LFD90
	INC L00B2
LFD90	LDX L00D5
LFD92	JSR LFB58
	CPX L00B4
	BEQ LFDA3
	DEX
	LDA L00DC,X
	STA L00DD,X
	JSR SCRLIN
	BCS LFD92
LFDA3	JSR LFC35
	JMP LFC98

LFDA9	LDX L00B4
LFDAB	INX
	LDA L00DC,X
	BNE LFDAB
LFDB0	DEX
	STX L00B4
	JSR LFB58
	LDY L00D6
LFDB8	LDA (L00B8)Y
	CMP #$20
	BNE LFDCA
	DEY
	BMI LFDC5
	CPY L00D4
	BCS LFDB8
LFDC5	LDA L00DC,X
	BNE LFDB0
	INY
LFDCA	STY PNTR
	STY L00BD
	RTS

LFDCF	PHA
	LDY PNTR
	CPY L00D6
	BCC LFDDD
	JSR LFD09
	LDY L00D4
	SEC
	DEY
LFDDD	INY
	STY PNTR
	PLA
	RTS

LFDE2	LDY PNTR
	CPY L00D4
	BNE LFDF8
	LDY L00B4
	CPY L00D3
	BEQ LFDFE
	DEC L00B4
	PHA
	JSR LFB56
	PLA
	LDY L00D6
	INY
LFDF8	DEY
	STY PNTR
	CPY L00D6
	CLC
LFDFE	RTS

DELINS	BCS INSERT
	JSR LEFT
	JSR LFE69
	BCS LFE16
LFE09	CPY L00D6
	BCC LFE21
	LDX L00B4
	LDA L00DD,X
	BNE LFE21
	JSR LFC20
LFE16	LDA L00C7
	STA L00B4
	LDA L00C6
	STA PNTR
	JMP LFB56

LFE21	JSR LFDCF
	JSR LFC50
	JSR LFDE2
	JSR LFC26
	JSR LFDCF
	JMP LFE09

INSERT	JSR LFE69
	JSR LFDA9
	CPX L00C7
	BNE LFE3F
	CPY L00C6
LFE3F	BCC LFE16
	JSR LFDCF
	BCC LFE4D
	LDA L00DC,X
	BNE LFE4D
	JSR LFD86
LFE4D	JSR LFDE2
	JSR LFC50
	JSR LFDCF
	JSR LFC26
	JSR LFDE2
	LDX L00B4
	CPX L00C7
	BNE LFE4D
	CPY L00C6
	BNE LFE4D
	JMP LFC20

LFE69	LDY PNTR
	STY L00C6
	LDX L00B4
	STX L00C7
	RTS

PULS	PHA
	TXA
	PHA
	TYA
	PHA
	LDA L00B3
	BNE LFE9E
	DEC L00D9
	BNE LFE9E
	LDA #$14
	STA L00D9
	JSR LFC50
	LDX L00B0
	LDY #$47
	CMP #$47
	BEQ LFE96
	STY L00D7
	LDX L00C1
	STX L00B0
	LDX L00D8
LFE96	LDY L00D7
	STA L00D7
	TYA
	JSR LFC2C
LFE9E	LDA #$FE
	LDX #0
LFEA2	PHA
	JSR LFF47
	LDY #7
LFEA8	LSR A
	BCS LFEB3
	CPX #$0F
	BEQ LFEB3
	CPX #$34
	BNE LFEBE
LFEB3	INX
	DEY
	BPL LFEA8
	PLA
	SEC
	ROL A
	BCS LFEA2
	BCC LFF3A
LFEBE	PLA
	LDA MODE1,X
	TAY
	LDA #$FD
	JSR LFF47
	AND #$80
	BEQ LFED8
	LDA #$BF
	JSR LFF47
	AND #$10
	BEQ LFED8
	TYA
	BNE LFEF4
LFED8	TYA
	CMP #$20
	BCC LFEF2
	CMP #$2C
	BCC LFEF4
	CMP #$3C
	BCC LFEED
	CMP #$80
	BCC LFEF4
	ADC #$03
	BNE LFEF4
LFEED	LDA MODE1+20,Y
	BPL LFEF4
LFEF2	ORA #$80
LFEF4	CPX L00C8
	BNE LFF08
	DEC L00DA
	BPL SCNRTS
	INC L00DA
	DEC L00DB
	BNE SCNRTS
	INC L00DB
	LDY NDX
	BNE SCNRTS
LFF08	LDY NDX         ;GET # OF CHARS IN KEY QUEUE
	CPY #XMAX-1     ;BUFFER FULL ?
	BEQ SCNRTS      ;YES - NO MORE INSERT
	STA KEYD,Y      ;PUT RAW DATA HERE
	INC NDX
	LDY #$0F
	STY SIDREG+24
	LDY #$20
	STY SIDREG+1
	LDY #1
	STY SIDREG+5
	STY SIDREG+6
	LDY #$80
	STY SIDREG+4
	INY
	STY SIDREG+4
	CPX L00C8
	BEQ LFF36
	LDY #$14
	STY L00DA
LFF36	LDY #$04
	STY L00DB
LFF3A	STX L00C8
SCNRTS	LDA #$8F
	STA VICREG+25
	PLA
	TAY
	PLA
	TAX
	PLA
NMI	RTI

LFF47	STA COLM
SCN22	LDA ROWS
	CMP ROWS        ;DEBOUNCE KEYBOARD
	BNE SCN22
	RTS

NSTOP	LDA #$7F
	JSR LFF47
	AND #$80
	RTS

MODE1
;DEL,3,5,7,9,+,YEN SIGN,1
	.BYT $14,$0D,$1D,$88,$85,$86,$87,$11
;RETURN,W,R,Y,I,P,*,LEFT ARROW
	.BYT $33,$57,$41,$34,$5A,$53,$45,$00
;RT CRSR,A,D,G,J,L,;,CTRL
	.BYT $35,$52,$44,$36,$43,$46,$54,$58
;F4,4,6,8,0,-,HOME,2
	.BYT $37,$59,$47,$38,$42,$48,$55,$56
;F1,Z,C,B,M,.,R.SHIFTT,SPACE
	.BYT $39,$49,$4A,$30,$4D,$4B,$4F,$4E
;F2,S,F,H,K,:,=,COM.KEY
	.BYT $2B,$50,$4C,$2D,$2E,$3A,$40,$2C
;F3,E,T,U,O,@,EXP,Q
	.BYT $5C,$2A,$3B,$13,$00,$3D,$5E,$2F
;CRSR DWN,L.SHIFT,X,V,N,,,/,STOP
	.BYT $31,$5F,$04,$32,$20,$02,$51,$03

	.BYTE $3C,$2D,$3E,$3F,$30,$21,$22,$23
	.BYTE $24,$25,$26,$27,$28,$29,$5B,$5D

	.BYTE $80,$40,$20,$10,$08,$04,$02,$01

LINZ0	= VICSCN
LINZ1	= LINZ0+LLEN
LINZ2	= LINZ1+LLEN
LINZ3	= LINZ2+LLEN
LINZ4	= LINZ3+LLEN
LINZ5	= LINZ4+LLEN
LINZ6	= LINZ5+LLEN
LINZ7	= LINZ6+LLEN
LINZ8	= LINZ7+LLEN
LINZ9	= LINZ8+LLEN
LINZ10	= LINZ9+LLEN
LINZ11	= LINZ10+LLEN
LINZ12	= LINZ11+LLEN
LINZ13	= LINZ12+LLEN
LINZ14	= LINZ13+LLEN
LINZ15	= LINZ14+LLEN
LINZ16	= LINZ15+LLEN
LINZ17	= LINZ16+LLEN
LINZ18	= LINZ17+LLEN
LINZ19	= LINZ18+LLEN
LINZ20	= LINZ19+LLEN
LINZ21	= LINZ20+LLEN
LINZ22	= LINZ21+LLEN
LINZ23	= LINZ22+LLEN
LINZ24	= LINZ23+LLEN

LDTB2
	.BYTE <LINZ0
	.BYTE <LINZ1
	.BYTE <LINZ2
	.BYTE <LINZ3
	.BYTE <LINZ4
	.BYTE <LINZ5
	.BYTE <LINZ6
	.BYTE <LINZ7
	.BYTE <LINZ8
	.BYTE <LINZ9
	.BYTE <LINZ10
	.BYTE <LINZ11
	.BYTE <LINZ12
	.BYTE <LINZ13
	.BYTE <LINZ14
	.BYTE <LINZ15
	.BYTE <LINZ16
	.BYTE <LINZ17
	.BYTE <LINZ18
	.BYTE <LINZ19
	.BYTE <LINZ20
	.BYTE <LINZ21
	.BYTE <LINZ22
	.BYTE <LINZ23
	.BYTE <LINZ24
LDTB1
	.BYTE >LINZ0
	.BYTE >LINZ1
	.BYTE >LINZ2
	.BYTE >LINZ3
	.BYTE >LINZ4
	.BYTE >LINZ5
	.BYTE >LINZ6
	.BYTE >LINZ7
	.BYTE >LINZ8
	.BYTE >LINZ9
	.BYTE >LINZ10
	.BYTE >LINZ11
	.BYTE >LINZ12
	.BYTE >LINZ13
	.BYTE >LINZ14
	.BYTE >LINZ15
	.BYTE >LINZ16
	.BYTE >LINZ17
	.BYTE >LINZ18
	.BYTE >LINZ19
	.BYTE >LINZ20
	.BYTE >LINZ21
	.BYTE >LINZ22
	.BYTE >LINZ23
	.BYTE >LINZ24

	*=$FFFA
	.WOR NMI        ;PROGRAM DEFINEABLE
	.WOR START      ;INITIALIZATION CODE
	.WOR PULS       ;INTERRUPT HANDLER
